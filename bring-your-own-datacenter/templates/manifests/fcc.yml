{{- range $instance := .Values.fcc.instances }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $instance.vtssId }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $instance.vtssId }}
  serviceName: {{ $instance.vtssId }}
  template:
    metadata:
      labels:
        app: {{ $instance.vtssId }}
    spec:
      volumes:
        - name: {{ $instance.vtssId }}
          persistentVolumeClaim:
            claimName: {{ $instance.vtssId }}-claim
      {{- if $.Values.fcc.image.pullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.fcc.image.pullSecret }}
      {{- end }}
      {{- with $.Values.fcc.config.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $instance.vtssId }}
          {{- if $.Values.local }}
          imagePullPolicy: IfNotPresent
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          image: {{ $.Values.fcc.image.name }}:{{ $.Values.fcc.image.tag }}
          resources:
            limits:
            {{- range $key, $value := $.Values.fcc.config.limits }}
              {{ $key }}: {{ $value }}
            {{- end }}
          ports:
            - containerPort: 20001
          volumeMounts:
            - name: {{ $instance.vtssId }}
              mountPath: /fcc
          env:
            - name: vtssId
              value: {{ $instance.vtssId }}
            - name: vtssSecret
              value: {{ $instance.vtssSecret }}
              {{- with $.Values.fcc.proxy }}
                {{- range $key, $value := . }}
                  {{- if $value }}
            - name: {{ $key | upper }}_PROXY
              value: {{ $value | quote }}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- with $.Values.fcc.config.env }}
                {{- range $value := . }}
                  {{- if $value }}
            - {{ toYaml $value | nindent 14 | trim -}}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- with $instance.env }}
                {{- range $value := . }}
                  {{- if $value }}
            - {{ toYaml $value | nindent 14 | trim -}}
                  {{- end }}
                {{- end }}
              {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 20001
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          # startupProbe:
          #   httpGet:
          #     path: /actuator/info
          #     port: 20001
          #   failureThreshold: 60
          #   periodSeconds: 15

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $instance.vtssId }}-claim
spec:
  storageClassName: {{ with $instance.storageClass }}
    {{- . }}
  {{- else }}
    {{- $.Values.fcc.config.storage.class }}
  {{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ with $instance.storageCapacity }}
        {{- . }}
      {{- else }}
        {{- $.Values.fcc.config.storage.capacity }}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ $instance.vtssId }}
  namespace: {{ $.Release.Namespace }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 20001
  selector:
    app: {{ $instance.vtssId }}

---
{{- end }}
